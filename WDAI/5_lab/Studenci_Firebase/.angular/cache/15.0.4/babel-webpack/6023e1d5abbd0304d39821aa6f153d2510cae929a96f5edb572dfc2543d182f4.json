{"ast":null,"code":"import { first } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/database\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    constructor(dataBase) {\n      this.dataBase = dataBase;\n      this.daneRef = dataBase.list('students').valueChanges();\n    }\n    createStudent(student) {\n      const daneRef = this.dataBase.list('students');\n      daneRef.push(student);\n    }\n    // NIE JEST NIGDZIE UŻYWANE \n    // updateStudent(student: Student) {   \n    // }\n    deleteStudent(student) {\n      let key;\n      //snapshotChanges() - obecny stan firestore\n      this.dataBase.list('students').snapshotChanges().pipe(first()).subscribe(items => {\n        for (let i of items) {\n          if (i.payload.val().name == student.name && i.payload.val().key == student.key && i.payload.val().age == student.age) {\n            key = i.payload.key;\n            this.dataBase.list('students').remove(key);\n            break;\n          }\n        }\n      });\n    }\n    getStudentsList() {\n      this.daneRef = this.dataBase.list('students').valueChanges();\n      return this.daneRef;\n    }\n    deleteAll() {\n      const daneRef = this.dataBase.list('students');\n      daneRef.remove();\n    }\n  }\n  StudentService.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.AngularFireDatabase));\n  };\n  StudentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n  return StudentService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}